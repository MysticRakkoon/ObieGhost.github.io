//---------------------------Mouse Functions--------------------------

//--Determining the main and secondary characters DO NOT TOUCH
OnMouseMove
 {
		if reference3 == 0 
		{
			MouseMoveSakura
		}
		else
		{
			MouseMoveKero
		}
 }
 
 //*********************Advanced User Info*******************************
//These text boxes are meant for those who have an interest in expanding or using more complicated functions in their ghost. Also for my own reference in the future since I plan on using this template too, haha. If you have no interest in any of this and just want to keep things as simple as possible, feel free to skip these boxes.

//If you want to have more than two characters at any point, like for example how I added Charger with my Hunter/Smoker ghost, and you want to be able to interact with that character like you can with the others, you will have to add in that character to OnMouseMove above. You'll need to know the p[] you've assigned your third character to, which in Charger's case was 3. You can assign your third character any p you want, just be consistent about using the same p[] everytime. I touch on \p a bit more in the walkthrough.
//So anyway, as you can see above, OnMouseMove determines who the user is touching, so you'll just have to add in an elseif checking for reference3 == 3, or reference3 == 4, or whatever p number is you're using. More on elseif in the walkthrough and in bootend.dic. After that, you'll just need to copy and paste the other mouse functions below and change the name as you need (for example, MouseMoveCharger, MouseDoubleClickCharger). 

//Note though that the extra character will not be a hard-coded character like 0 and 1! You're basically tricking the program into thinking there's another character, and some functions in things like menu.dic and aitalk.dic won't work quite right if you put in a value other than 0 or 1, and you'll need to be careful about making sure to remove the third character when you're done. But luckily for you, this won't be a problem with any of the mouse functions as far as I'm aware, and you can fill them out for the third character just like you would for the two main ones.
//***********************************************************************


//The petting function for your main character.  
MouseMoveSakura
 {
	if reference4 != "" //donttouch 
 	{
 		stroke++ //if you move the mouse over the right areas, the stroke count will go up.
 		if stroke >= 30 //if the stroke count is above a certain number, the petting dialogue will kick in. You can change this number to make the petting take longer or shorter if you want. FLELEs have it set to 50 for some reason, which makes it take longer than this.
		{
 			stroke = 0 //resetting the stroke count
			if reference4 == "Head" //collision for the head
 			{
				"\0\s[12]'Mmmm.'\n\n*It seems like it enjoys your touch.\e"
				"\0\s[2]*As you pet it you can feel vibrations under it's metal surface.\n\n'......'\e"
				"\0\s[2]*You feel the vibrating metal that covers Obie.\n'If only you could feel me actually... I wonder what would be our size difference then!'\n\n[half]\s[1]*A chuckling rumble vibration comes from it.\e"
				"\0\s[1]'That feels nice. It's been awhile since a sentient being touched me.'\e"
				"\0\s[2]\i[24]'Don't you ever get tired of petting me!?'\e"
				"\0\s[11]'Not right now.'\e"
 			}
 			elseif reference4 == "NoPets"
 			{
				"\0\s[7]'Do you know how to keep your hands to yourself?'\e"
				"\0\s[7]'Do you know how to keep your hands to yourself?'\e"
 				"\0\s[8]*It doesn't seem to be a good idea to pet it right now.\n\n\_q'S T O P.'\e"
 				"\0\s[9]\_q'DO NOT EVEN TRY TO TOUCH ME RIGHT NOW.'\e"
				"\0\s[9]'W-WHY DO YOU FEEL THE NEED TO INFURIATING ME?!'\e"
 			}
			
 		}
	}
 	else
	{
		stroke = 0
 	}
}



 //---- MouseMoveKero -----------------------------------------------------------------
 //MouseMoveKero is exactly like the above. I am hiding it right now. maybe i will add this later?
 
//MouseMoveKero
// {
//	if reference4 != ""
// 	{
// 		stroke++
// 		if stroke >= 40
//		{
//			stroke = 0
//			if reference4 == "Face" //Put in the name of your collision area you set up for your secondary character here.
// 			{
//				"\1\s[10]This is a face touching dialogue.\e"
				//Replace this dialogue with your secondary character's dialogue.
// 			}
//			elseif reference4 == "Point" //Like above, put in the name of another collision you set up in surfaces.txt for the secondary character.
//			{
//				"\1\s[10]This is a point touching dialogue since I don't really have a head, being a triangle.\e"
				//Replace this dialogue as appropriate.
//			}	
// 		}
//	}
//	else
//	{
//		stroke = 0
//	}
//}


//---- OnMouseDoubleClick -------------------------------------------------------
//This is set up much like OnMouseMove above, except this is checking to see if the user is double clicking on the ghost.
//Advanced users adding a third character, the same principles from OnMouseMove apply here as well! Make sure to add an elseif with the right number for your third character.

OnMouseDoubleClick //DONT TOUCH
 {
	//---- like with the OnMouseMove function above, this determines who the user is clicking on.
	if reference5 == 0
	{
	 	if reference3 == 0 //if the character is 0, aka your main character
		{
		MouseDoubleClickSakura
		}
		else
		{
 		MouseDoubleClickKero
		}
	}
 }


 //---- MouseDoubleClickSakura ----------------------------------------------------------
 //Like the petting animation above, this is the reactions they have to being double clicked. These also rely on the collisions you set up in surfaces.txt! This set is specifically for the main character, as indicated by the Sakura in the name again.
 
 //*********************Advanced User Info*******************************
 //As a note, double clicking on a certain area of your ghost doesn't have to be the user hitting them. You could instead set up a collision for a piece of clothing, and then have the character talk about that bit of clothing when it's double clicked, for example. One of Smoker's double clicks gives her a high-five when she's in a certain pose. Maybe double clicking is patting them, or pointing behind them, or tapping them, or any number of things. You can be creative here with how they respond depending on what areas you've set up as collisions!
 
 //If you don't want your character to be hittable at all, you can just delete everything in MouseDoubleClickSakura except OpenSakuraMenu. So it'd look like
 
 //MouseDoubleClickSakura
 //{
 //OpenSakuraMenu
 //}
 
 //That's all there is to it. This method also applies to the secondary character, Kero, below this set.
 //***********************************************************************
 
 
MouseDoubleClickSakura
 {
 	if reference4 == "Head" || reference4 == "NoPets"
	{
		"\0\s[2]'Don't break your ligaments.'\n'There might be more use for them rather than breaking them against my body.'\e"
		"\0\s[7]'Try that again.'\n'I want to see if you can really hurt yourself.'\e"
		"\0\s[0]'Doesn't hurt if that's what you're checking.'\e"
 	}
	else
 	{
 		OpenSakuraMenu
	}
 }

 
 //---- MouseDoubleClickKero -----------------------------------------------------------
 //This is just the same as MouseDoubleClickSakura above, except for your secondary character. The same principles apply, including how to make your character unhittable.
 
 
MouseDoubleClickKero
 {
 	if reference4 == "Body"
	{
		//Replace with Cliff asking if user wants to give an offering to Obie
 	}
	else
 	{
	}
 }
 
 //*********************Advanced User Info*******************************
 //There are other mouse related functions you could set up much like the above, such as OnMouseDragStart, OnMouseDragEnd, OnMouseWheel, and others which correspond to various things you can do with your mouse. You can probably guess what those functions do just by their names - OnMouseWheel would be if someone spun their mouse wheel over a certain area, for example. If you're interested in these, I'd recommend doing some reading at the CROW-SSP Encyclopedia to get a better idea of them and settle down for some trial and error learning as you try to put them in.
 //***********************************************************************