//---------------------------Envelopes--------------------------
//Basically, what this file does is set up some things that, for the purposes of this file, 
//I'll call envelopes (this is what they're referred to as on the CROW-SSP Dictionary site... at least, that's what I remember, it's been a while since I've checked it). 
//They are technically functions and can do many things, but this file is mostly an organizational tool for storing lists you may use.

//For the purposes of this file, an envelope is a list that you can populate with items, and this list can be called later during dialogue with the %(name) format. 

//%(username) is one, which displays the user's name, 
//and %(heshe) is another, which displays the right pronoun depending on what the user selected in bootend.dic or menu.dic. 
//Other ones include %(passmin), which shows how many minutes have passed since the ghost was started, 
//%(screenheight) which shows the height of the display they're currently on, 
//and %(keroname) for the name of the second character, among many, many others. Many of these are predefined by the AYA scripting and will be listed on the CROW-SSP site mentioned above, 

//So where does this file come in? Well, you can define your own envelopes/variables if you want! Here's an example.

afteralteritem
{
	"\0\s[2]'oh?'"
	"\0\s[11]'Oh, how I have missed getting these little offerings.'"
}

openforhowlong
{
	"\0\s[2]'I have been here for %(passmin) minutes.'"
	"\0\s[2]'Give me a second to figure that out.'\w8\w8\w8\w8\w8\w8\s[1]\n\n[half]'Looks like I have been gracing you with my presence for %(passmin) minutes.'"
}

folderdialogue
{
	"\0\s[5]* It looks like it is looking through something...\w8\w8\s[2]\i[22]\w8\n\n[half]'So many interesting folders you have there.'"
	"\0\s[2]\w8\w8\w8\w6\s[1]\i[12]\w8\w8'I can see your folders....'\n\n[half]\w8\w8\w8\w8\w6'I wonder what's in there....'\s[2]\w8\w8\w6\n\n[half]'...Anything in there for me maybe?'"
	"\0\s[2]'Your folders look tasty...\w4\w2 Can I eat one?"
	"\0\s[2]\s[6]'The %(usersfolder) looks especially tasty\w6.\w6.\w6.\w6.'\n\n[half]'May I?'\e"
}

obielocations
{
	"like here now,\w1 off of a mountians cliff"
	"in the ocean, in the deepest part of a forest\s[5]\n\n[half]\w1-well not deep enough as a village started to by built around me"
	"in one of the deepest forests"
}

//Not only that, but you can put an envelope IN an envelope. Here's another example.

//internalenvelope
//{
	//"Internal Envelope Dialogue 1 - %(exampleenvelope)"
	//"%(username)'s computer"
	//"Here is a blanklist object - %(blanklist)."
//}


//You can nest envelopes all day long, although it might get kind of convoluted if you don't keep track. This is particularly handy with %(username), 
//so your ghost can be specific if they're talking about something of the user's, like their files or folders for example. I'll leave a few lists in here you can fill out as you like. 
//And if this doesn't give you ideas, you can ignore this file, since nothing in it will show up unless you write it into the dialogue. You can add or take away as many items as you want from each list.

		//*********************Advanced User Info*******************************
	  //Because these are basically their own functions, you can do other things with them as well as display dialogue. 
	  //You can add if/else checks, run other functions, have pools of alternate dialogue... the possibilities are really endless.
	  
	  //One particularly useful thing you can do is add value changes to an envelope, if your dialogue is in a place where it's not easy to add the change directly. For example...
	  
	  //FeelingsGoUp
	  //{
	  //Feelings += 1
	  //"Thank you, %(username), that was really nice of you.\e"
	  //}
	  
	  //So this would display the dialogue as well as change the value. 
	  //Then you can call this in dialogue if you need to to change the value without having to do a bunch of fiddly business. 
	  //Specifically I'm thinking about things like RandomTalk, where it can be finicky to have dialogue that also changes a value like this. 
	  //Like "Oh... wow... %(FeelingsGoUp\e" could go into RandomTalk and still change the value effectively without breaking anything. 
	  //You can of course also change multiple values at once, and if you don't put dialogue in there, it will change the value invisibly.
	  
	  //Another use for these envelopes is to shortcut certain long lines of SakuraScript you don't want to have to keep typing. 
	  //A good example is if you want to change the font for a character. Take Papyrus from my Gaster ghost, he talks in the font Papyrus. 
	  //But I don't want to have to type the tag for it for every line of dialogue he does. So instead I can put it in an envelope.
	  
	  //p
	//	{
	//	"\f[name,Papyrus UT]\f[height,16]"
	//	}
		
		//And then I can make one that'll change the font back to normal.
		
	//	d
	//{
	//"\f[name,default]\f[height,default]"
	//}
	
	//So in dialogue, to change fonts I'd just have to go "%(p)HEY THERE!%(d)" to change fonts back and forth quickly. These kind of shortcuts can be very useful.
	
	//Another way to use envelopes is to store multiple poses for SurfaceRestore in aitalk.dic. Gaster for example has several neutral idle poses, but also several poses for when he's scared. So I can make an envelope like
		//And have him randomly pick one whenever I use %(scared) in dialogue. This can be an easy way to vary certain poses without having to manually put them in one at a time, and have some variety when your ghost goes back to its neutral pose in SurfaceRestore.
		
	  //***********************************************************************

angrypose
{
	"\0\s[7]"
	"\0\s[8]"
	"\0\s[9]"
}
	
weirdofferingitem
{
	"Pineapples at the cliff one time.'\w8\w2\n\n[half]'MULTIPLE Pineapples.\w7.\w7.'\w7\w6'Yeah I don't know why either.'"
	"a stuffed teddy bear once.'\w8\s[1]\n\n[half]'...It's still there, frozen in ice...'"
	"a cup of juice.'\n\n[half]'The entire cup was tasty.'"
	"flowers.'\w8\w8\w8'Not sure how they even were brought up there in good condition with the fridged temperatures'"
	"\s[7]a goat.'\w8\w8\w8\w7\w7\w8\n\n[half]\s[8]\i[80]'The DAMNED THING is still alive and thriving on eating MY offerings.'"
}

offeringitems
{
	"that teddy bear"
	"\s[7]\i[70]THAT GOAT"
	"that cat"
	"the sented incense"
	"those gloves"
	"the gold"
	"the cup of milk"
}

usersfolder
{
	"Recycle Bin"
	"Document folder"
	"Programs folder"
	"Pictures folder"
}


//Now, this next envelope is unique. I've called it a double envelope at times, but this is actually technically an array. Note that it has a word, a comma, then another word. 
//This is essentially a list being stored in this envelope. You can call one of the values by using brackets around the number of the list entry. 
//So, the first value (the Korean word) would be %(lessonkor[0]) since all arrays start at 0. The second value (the definition) would be %(lessonkor[1]). 
//If you have a longer array, like "word,word,word,word,word", you can keep calling values by changing the numbers, like %(lessonkor[5]) or %(lessonkor[10]). 
//Arrays can be very powerful and useful for storing a lot of information in a condensed space, but I must level with you, I'm not very good at arrays or figuring out how to use them. 
//:B They can be VERY useful though, if you can wrap your head around how they work. An example of pulling information from this array can be seen in aitalk.dic.

//lessonkor
//{
	//"사과(sa-gua),apple"
	//"노동(no-dong),labor"
	//"손가락(son-ga-rak),finger"
	//"마르크스(ma-r-k-s),Marx"
	//"자본주의(ja-bon-ju-yi),capitalism"
//}

//You can also format your envelopes like this as one line separated by semicolons, but personally I think the spaced lists above look nicer. It's up to you however you want to set them up.

//blanklistparagraph
//{
	//"List paragraph 1"; "List paragraph 2"; "List paragraph 3"; "List paragraph 4"; "List paragraph 5";
//}


 //**** Don't touch this ***************************************************************
 //This is code stuff and nothing for you to worry about, just save the .dic and move on! You're done!
 
 On_\person
{
 	person
}
