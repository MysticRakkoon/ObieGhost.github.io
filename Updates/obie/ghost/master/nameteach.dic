//---------------------------The User's Name--------------------------

//--OnTeachName
OnTeachName	
{
	if reference0 == "TEACHNAME" //ignore this
		{
		"\0\s[2]'Since I am stuck here with you I guess I should learn your name.'\w8\w8\n\n'What is your name?'\![open,inputbox,OnNameTeach,-1]\e"
		}
	else
		{
		}
}


//--OnNameTeach
//This is where the user inputs their name and the ghost analyzes it. 
//If you want your ghost to have specific responses to certain names, this is where you would add them. 

OnNameTeach
{
	tempname = reference0 //this stores the name value from reference0 in tempname
	
	
	reference0 = TOLOWER(reference0) //changes it to lowercase
	reference0 = REPLACE(reference0," ","") //removes spaces
	reference0 = REPLACE(reference0,".","") //removes periods
	reference0 = REPLACE(reference0,"-","") //removes dashes
	
	//Those extra TOLOWER/REPLACE things up there basically clean up the user's input so you don't have to check for Girl, GIRL, girl, GiRl, etc. 
	//It'll make it much easier to check for any specific name, since you won't have to account for any edge cases. 
	//Note that the names you will be checking for should be in all lowercase, however.
	
	if reference0 == "Obie" 
	{
		"\0\s[0]That's my name which might be confusing between the two of us.\w5 Try that again.\![open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "Cliff"
	{
		"\0\s[2]'....'\w8\w6\n'That cannot be your name... Humans use that name for a part of terrian, not for a human....'\w8\w8\n 'If your name is that, I pity you. Give yourself a nice nickname instead.'[open,inputbox,OnNameTeach,-1]"
	}
	elseif reference0 == "Rob"
	{
		"\0\s[12]'I have heard a lot about you %(username) from the person who brought me here.'\w8\w8\w4\n\n\s[1]'She seems to love you very much and talked about you to great lengths.'\n\n[half]\w7'I am glad I got to meet you, whether or not you're whisking me away to where-ever here is\w4.\w4.\w4.'\n\n'For my reference, please choose a different name that I can call you by.\e"
	}
	elseif reference0 == ""
	{
		username = "USER"
		
		"\0\s[12]'You didn't put in anything\w8.\w8.w8.\w8\0\s[0]I will call you human either way.\w2 Formally you will be USER.'\e"
	}
	else //if the user put in something not specified above, ie a proper name the ghost can use. 
	{
		username = tempname
		"\0\s[0]You,\w6 human,\w7 I will now call you %(username).\e"
	}
}

//The rest of this is for advanced users who want to add titles to their user's names. If you're not interested, you can ignore this and move on to another file.


//I CANT SEEM TO GET THE TITLES WORKING MAYBE DONT TOUCH THIS RIGHT NOW??


//*********************Advanced User Info*******************************
	//If you want to let your user add a title to their name, like Lady or Master, then you'll want to expand this section a little. This check would go AFTER the check above for a valid name, leading to further choices instead of setting the name. So you'd want to uncomment and put in the else above...
	
	// {
		// "\0\s[0]Do you want a title?\w4\n\n[half]\![*]\q[Nope,titlenone]\n"
		// //You can replace "\0\s[0]Do you want a title?", but don't touch the rest of it.
		// --
		// if presuffix == "masculine" //this value was defined in bootend.dic and menu.dic when the user chose their pronouns. Thus, if someone chose he/him pronouns, they would be able to choose Mr. or Master. If the user hasn't set their pronouns, or that's not a feature of your ghost, you can just put all the choices together without these presuffix checks and let the user decide from all.
		// {
		// "\![*]\q[Mr.,titlemr]\n/
		// \![*]\q[Master,titlemaster]\n"
		// }
		// elseif presuffix == "feminine" //Likewise, if someone chose she/her pronouns, they could choose Ms. or Lady.
		// {
		// "\![*]\q[Ms.,titlems]\n/
		// \![*]\q[Lady,titlelady]\n"
		// }
		// -- //the titles after this are gender neutral and will appear for all users. If you want to remove the masculine and feminine titles entirely, 
		//just delete from the curly bracket one line up to the double dashes above "if presuffix == "masculine". That should leave only the neutral titles. 
		//Make sure to leave a set of double dashes above the neutral titles though. 
		//You can also just put the feminine and masculine titles in here too if you want all titles to be available to all users at all times.
		// "\![*]\q[-ssi,titlessi]\n/
		// \![*]\q[-san,titlesan]\e"
		// //Note that the final line here ends with \e instead of \n/, since it is the final option. Make sure your final option (and ONLY your final option) always ends with \e. More on that in the box below.
	// }
	//Adding new titles for your users to use is simply a matter of copy and pasting creatively. 
	//You can see how the ghost puts together the title and your name in the Select. sections below. 
	//Above, you simply need to add a new option and link it to a new Select. 
	//For example, you could add "\![*]\q[Mistress,titlemistress]\n/" between Ms. and Lady up there, then write up a Select.titlemistress below that fits the pattern of the others.
	//***********************************************************************
	
	//The following Select.title[word] functions add the title to the user's name, then go to the final step, NameDone. You don't have to touch any of these. Advanced users, notice how these match the linked functions in the choices above.
	
//Select.titlenone
//{
//		username = tempname
//		NameDone
//}

//Select.titlemr
//{
//		username = "Mr. " + tempname
//		NameDone
//}
		
//Select.titlems
//{
//		username = "Ms. " + tempname
//		NameDone
//}

//Select.titlelady
//{
//		username = "Mrs. " + tempname
//		NameDone
//}


//--NameDone---------------------------------------------------
//This is the final bit of dialogue your ghosts will have when the user changes their name and adds a title above. 
//There is a special section here for when the user first boots the ghost, if you uncommented that in bootend.dic. If you aren't doing either of those things, then you can ignore this.

NameDone
{
	if firstboot == 1
	{
		firstboot = 0
		
		//This dialogue will display the first time the user puts in their name. 
		"\0\s[2]'I have not heard of that name before....'\n\w2\s[0]'Interesting....'\e"
	}
	else
	{
	"\0\s[2]'I will now call you %(username) until further notice.'\e"
	}	
}
